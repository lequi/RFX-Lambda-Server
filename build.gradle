apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '1.0'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
    	url = "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

dependencies {
    compile(
            // common
            'io.netty:netty-all:4.0.32.Final'
                        
            , 'com.typesafe.akka:akka-actor_2.11:2.4.0'
            , 'com.google.code.gson:gson:2.4'
            , 'log4j:log4j:1.2.17'          
            , 'org.apache.commons:commons-lang3:3.3.2'
            , 'commons-net:commons-net:3.3'
            , 'commons-io:commons-io:2.4'
            , 'redis.clients:jedis:2.7.3'
            , 'org.apache.httpcomponents:httpclient:4.5'
            , 'org.yaml:snakeyaml:1.14'
            , 'com.google.guava:guava:18.0'
            
            // Real-time web
            , 'com.corundumstudio.socketio:netty-socketio:1.7.7'            
          
          	// deps of Boilerpipe Text Extraction library
          	, 'net.htmlparser.jericho:jericho-html:3.3'
          	, 'xerces:xercesImpl:2.11.0'          	
          	, 'net.sourceforge.nekohtml:nekohtml:1.9.22'      
          	
          	//HTML parser
          	, 'org.jsoup:jsoup:1.8.3'          	   	
          	
          	// built Boilerpipe lib from Ant Build
			, fileTree(dir: 'lib', include: '**/*.jar')    
			
    )
    testCompile group: 'junit', name: 'junit', version: '4.12'
}



def getClasspathStringJars() {
	def baseFolder = 'deps/'
    def fileNames = []
    configurations.compile.each { File file -> fileNames.add(baseFolder + file.name) }
    
    def classpath = fileNames.join(" ; ")    
    return '. ; ' + classpath + ' ; '
}

// copy libs
task rfxCopyRuntimeLibs(type: Copy) {  
  into "build/libs/deps"  
  from configurations.compile  
}

// copy config
task rfxCopyConfigs(type: Copy) {  
  into "build/libs/configs"  
  from files('configs')
}

task buildMainJar(type: Jar) {	
	dependsOn classes   
    from(sourceSets.main.output) {
        include "**"
    }
    version = '1.0'
    baseName = 'adsplay-server'
    manifest {
   		attributes ('Implementation-Title': 'ArticleParsingApiServer', 
        			'Implementation-Version': version ,
        			'Main-Class': 'rfx.server.lambda.LambdaHttpServer',
        			'Class-Path' : getClasspathStringJars() 
        			)
	}
}
